#include<stdio.h>
#include<iostream>
#include<conio.h>
#include<windows.h>
#include<time.h>
#include <thread>
//#include<SQLAPI.h>
using namespace std;
void border();
char gunpoint;
int d1[5][3],c[2],gunp=1,playerpoint=0,killpoint=100,playerhealth=3;
char grid[350][350]=                                    ///arena
                      {"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", /// X: wall
                       "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", /// c: cpu
                       "XXXXXXXXX                                                                                                                 XXXXXXXXXXXXXXXXXXXXXXXX                                                                                        XXXXXXXXXXXXXXXXXXXXXXXXX                                XXXXXXXX", /// u: user
                       "XXXXXX                                                                                                                      XXXXXXXXXXXXXXXXXXXX                                                                                               XXXXXXXXXXXXXXXXXX                                       XXX", /// b: user's bullet
                       "XXXXX                                                                                                                                                                                                                                             XXXXXXXXXXXX                                           XX", /// B: cpu's bullet
                       "XXXX                                                                                                                                                                                                                                                                                                     XX", ///boomerang(array): boomerang
                       "XXX                                                                                                                                                                                                                                                                                                      XX", ///wall(array): user's wall
                       "XX                                                                                                                                                                                                                                                                                                       XX",
                       "XX                                                                                                                                                                                                                                                                                                       XX",
                       "XX                             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                                                                                                                                                                                 XXXXXXXXXXXXXXXXXXX",
                       "XX                             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    XXXX                                                                                                                                                                                                            XXXXXXXXXXXXXXXXXXXXXXX",
                       "XX                                  XXXXXXXXXXXXXXXXXXXXXXX           XXX                                                                                                                                                                                                           XXX     XXXXX   XXXXXXX",
                       "XX                                       XXXXXXXXXXXXXX             XXXX                                                                                                                           XX                                                                                                    XX",
                       "XX                                             XXX                                                                                                                                             XXXXXXXXXX                                                                                                XX",
                       "XX                                                                                                       XXXXXX                                              XXXXXXXX                        XXXXXXXXXXXXXX                                                                                              XX",
                       "XX                                                                                                       XXXXXXXXXXXXXXXXXXXXX                           XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXX                                                                                          XX",
                       "XXX                                                                                                      XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                                                     XXX",
                       "XXXXX                                                                                                                               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                                             XXXXXXX",
                       "XXXXXXX                                                                                                                                                   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                             XXXXXX  XXX             XXXXXXXXXXXX",
                       "XXXXX                                                                                                                                                       XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                              XXXX    XXXXXXXXX         XXXXXXXXXXXXX",
                       "XXXXXXX                                                                                                                                                       XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                         XXX                              XXXXXXX",
                       "XXXXX                                                                                                                                                                                                                                                             XX                                   XXXX",
                       "XXXX                                                                                                                                                                                                                                                              XX                                     XX",
                       "XXX                                                                                               XXXXXXXXXXX                                                                                                                                                     XX                                     XX",
                       "XX                         XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                                                                                                                      X                                     XX",
                       "XX                         XXXXXXXXXXXXXXX    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                                                                                                                        XX                                    XXX",
                       "XX                         XXXXX                XXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                                                                                                                                                                   XXXXX",
                       "XX                        XXXXX                                            XXXXXXXXXX      XXXXXXX                                                                                                                                                                                                       XX",
                       "XX                       XXXXX                                               XXXXXX                                                                                               XXXXXXXXX                                                                                                              XX",
                       "XX                        XXXX                                                                                                                                                  XXXXXXXXXXXXXX                                                                    X                                      XX",
                       "XX                         XXX                                                                                                                                               XXXXXXXXXXXXXXXXXX                                                                   X                                      XX",
                       "XX                         XXX                                                                                                                                         XXXXXXXXXXXXXXXXXXXXXXX                                                                XXXXXX                                    XXX",
                       "XXX                       XXXXXX                                                                                                                                        XXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                XXXXXXXXXXXXXXXXXX                                XXXXX",
                       "XXXX                    XXXXXXXXXXXXXXXX             XXXXXXXX                                                                               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                    XXXXXXXXXXXXXXXXXXXXXXXXXXX                          XXXXXXXX",
                       "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                       "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"};
                    //   char grid[20][40];


void gravity(int num){
    int check,time=0;
    char n;
    while(playerhealth>=0){
        if(time==0)
            Sleep(500);
        if(time==1)
            Sleep(400);
        if(time==2)
            Sleep(300);
        if(time>2)
            Sleep(250);
        check=1;
        for(int i=0;i<1;i++){
            if(grid[c[0]+3][c[1]]!=' '||grid[c[0]+3][c[1]-1]!=' '||grid[c[0]+3][c[1]+1]!=' '){
				check=0;
			}
		}
		if(check==1){
		//line 1 add
			grid[c[0]+1][c[1]-1]='b';
			grid[c[0]+3][c[1]-1]='a';
			//line 1 remove
			grid[c[0]][c[1]-1]=' ';
			grid[c[0]+2][c[1]-1]=' ';
			//line 2
			grid[c[0]+2][c[1]]='a';
			//remove
			grid[c[0]][c[1]]=' ';
			//line 3
			grid[c[0]+1][c[1]+1]='b';
			grid[c[0]+3][c[1]+1]='a';
			//remove
			grid[c[0]][c[1]+1]=' ';
			grid[c[0]+2][c[1]+1]=' ';
			c[0]++;
			time++;
			border();
		}
		else
            time=0;
    }
}

int emptyspace(int point){
    if(point==1){
        if(grid[6][284]==' '&&grid[7][284]==' '&&grid[6][283]==' '&&grid[6][285]==' '&&grid[8][283]==' '&&grid[8][285]==' '&&grid[7][285]==' '&&
        grid[7][283]==' '&&grid[8][284]==' '){
            return 1;
        }
        return 0;
    }else if(point==2){
        if(grid[31][276]==' '&&grid[32][276]==' '&&grid[31][275]==' '&&grid[31][277]==' '&&grid[33][275]==' '&&grid[33][277]==' '&&grid[32][277]==' '&&
        grid[32][275]==' '&&grid[33][276]==' '){
            return 1;
        }
        return 0;
    }else if(point==3){
        if(grid[31][11]==' '&&grid[32][11]==' '&&grid[31][10]==' '&&grid[31][12]==' '&&grid[33][10]==' '&&grid[33][12]==' '&&grid[32][12]==' '&&
        grid[32][10]==' '&&grid[33][11]==' '){
            return 1;
        }
        return 0;
    }else if(point==4){
        if(grid[31][44]==' '&&grid[32][44]==' '&&grid[31][43]==' '&&grid[31][45]==' '&&grid[33][43]==' '&&grid[33][45]==' '&&grid[32][45]==' '&&
        grid[32][43]==' '&&grid[33][44]==' '){
            return 1;
        }
        return 0;
    }else if(point==5){
        if(grid[30][198]==' '&&grid[31][198]==' '&&grid[30][197]==' '&&grid[30][199]==' '&&grid[32][197]==' '&&grid[32][199]==' '&&grid[31][199]==' '&&
        grid[31][197]==' '&&grid[32][198]==' '){
            return 1;
        }
        return 0;
    }
}
void ai(int i){
    i=i-1;
    int x=0,randf;
    while(playerhealth>=0){
        x=0;
        Sleep(1000);
        if(d1[i][2]==0){
            while(x==0){
                randf=rand()%5;
                if(randf==0&&emptyspace(1)){
                    grid[6][284]='a';                //  178;
                    grid[7][284]='a';                // 178;
                    grid[6][283]='b';               // 220;
                    grid[6][285]='b';            //   220;
                    grid[8][283]='a';             //  178;
                    grid[8][285]='a';              //178;
                    d1[i][0]=6;
                    d1[i][1]=284;
                    d1[i][2]=1;
                    x=1;
                }else if(randf==1&&emptyspace(2)){
                    grid[31][276]='a';                //  178;
                    grid[32][276]='a';                // 178;
                    grid[31][275]='b';               // 220;
                    grid[31][277]='b';            //   220;
                    grid[33][275]='a';             //  178;
                    grid[33][277]='a';              //178;
                    d1[i][0]=31;
                    d1[i][1]=276;
                    d1[i][2]=1;
                    x=1;
                }else if(randf==2&&emptyspace(3)){
                    grid[31][11]='a';                //  178;
                    grid[32][11]='a';                // 178;
                    grid[31][10]='b';               // 220;
                    grid[31][12]='b';            //   220;
                    grid[33][10]='a';             //  178;
                    grid[33][12]='a';              //178;
                    d1[i][0]=31;
                    d1[i][1]=11;
                    d1[i][2]=1;
                    x=1;
                }else if(randf==3&&emptyspace(4)){
                    grid[31][44]='a';                //  178;
                    grid[32][44]='a';                // 178;
                    grid[31][43]='b';               // 220;
                    grid[31][45]='b';            //   220;
                    grid[33][43]='a';             //  178;
                    grid[33][45]='a';              //178;
                    d1[i][0]=31;
                    d1[i][1]=44;
                    d1[i][2]=1;
                    x=1;
                }else if(randf==4&&emptyspace(5)){
                    grid[30][198]='a';                //  178;
                    grid[31][198]='a';                // 178;
                    grid[30][197]='b';               // 220;
                    grid[30][199]='b';            //   220;
                    grid[32][197]='a';             //  178;
                    grid[32][199]='a';              //178;
                    d1[i][0]=30;
                    d1[i][1]=198;
                    d1[i][2]=1;
                    x=1;
                }
                border();
            }
            while(d1[i][2]==1&&playerhealth>=0){
                if(d1[i][0]==c[0]){
                    if(d1[i][1]-c[1]<65&&d1[i][1]-c[1]>-65){
                        if(playerpoint<10)
                            Sleep(100);
                        if(playerpoint>9&&playerpoint<30)
                            Sleep(50);
                        if(playerpoint>29)
                            Sleep(10);
                        Beep(523,100);
                        if(c[1]>d1[i][1]){
                            for(int j=d1[i][1];j<d1[i][1]+65;j++){
                                if(grid[d1[i][0]][j]==' ')
                                    continue;
                                else if(grid[d1[i][0]][j]=='X')
                                    break;
                                else if(grid[d1[i][0]][j]=='a'){
                                    if((j==c[1]&&d1[i][0]==c[0]+1)||(j==c[1]-1&&d1[i][0]==c[0]+2)){
                                        playerhealth--;
                                    }
                                }else if(grid[d1[i][0]][j]=='b'){
                                    if(j==c[1]-1&&d1[i][0]==c[0]){
                                        playerhealth--;
                                    }
                                }
                            }
                        }else{
                            for(int j=d1[i][1];j>d1[i][1]-65;j--){
                                if(grid[d1[i][0]][j]==' ')
                                    continue;
                                else if(grid[d1[i][0]][j]=='X')
                                    break;
                                else if(grid[d1[i][0]][j]=='a'){
                                    if((j==c[1]&&d1[i][0]==c[0]+1)||(j==c[1]+1&&d1[i][0]==c[0]+2)){
                                        playerhealth--;
                                        break;
                                    }
                                }else if(grid[d1[i][0]][j]=='b'){
                                    if(j==c[1]+1&&d1[i][0]==c[0]){
                                        playerhealth--;
                                        break;
                                    }
                                }
                            }
                        }
                    }else if(d1[i][1]<c[1]){
                        if((grid[d1[i][0]][d1[i][1]+2]==' ')&&(grid[d1[i][0]+1][d1[i][1]+2]==' ')&&(grid[d1[i][0]+2][d1[i][1]+2]==' ')){
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                            grid[d1[i][0]][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]][d1[i][1]]='b';
                            grid[d1[i][0]][d1[i][1]+1]='a';
                            grid[d1[i][0]][d1[i][1]+2]='b';
                            grid[d1[i][0]+1][d1[i][1]]=' ';
                            grid[d1[i][0]+1][d1[i][1]+1]='a';
                            grid[d1[i][0]+2][d1[i][1]]='a';
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';
                            grid[d1[i][0]+2][d1[i][1]+2]='a';
                            d1[i][1]++;
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                        }
                    }else if(d1[i][1]>c[1]){
                        if((grid[d1[i][0]][d1[i][1]-2]==' ')&&(grid[d1[i][0]+1][d1[i][1]-2]==' ')&&(grid[d1[i][0]+2][d1[i][1]-2]==' ')){
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                            grid[d1[i][0]][d1[i][1]+1]=' ';
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';
                            grid[d1[i][0]][d1[i][1]]='b';
                            grid[d1[i][0]][d1[i][1]-1]='a';
                            grid[d1[i][0]][d1[i][1]-2]='b';
                            grid[d1[i][0]+1][d1[i][1]]=' ';
                            grid[d1[i][0]+1][d1[i][1]-1]='a';
                            grid[d1[i][0]+2][d1[i][1]]='a';
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]-2]='a';
                            d1[i][1]--;
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                        }
                    }
                }else if(d1[i][1]==c[1]){
                    Sleep(100);
                    if(c[0]>d1[i][0]){
                         for(int j=d1[i][0];j<35;j++){
                             if(grid[j][d1[i][1]]==' ')
                                continue;
                            else if(grid[j][d1[i][1]]=='X')
                                break;
                            else if(grid[j][d1[i][1]]=='a'){
                                if(j==c[0]&&d1[i][1]==c[1]){
                                    playerhealth--;
                                    break;
                                }
                            }else if(grid[j][d1[i][1]]=='b'){
                                if((j==c[0]&&d1[i][1]==c[1]+1)||(j==c[0]&&d1[i][1]==c[1]-1)){
                                    playerhealth--;
                                    break;
                                }
                            }
                        }
                    }else{
                        for(int j=d1[i][0];j>0;j--){
                             if(grid[j][d1[i][1]]==' ')
                                continue;
                            else if(grid[j][d1[i][1]]=='X')
                                break;
                            else if(grid[j][d1[i][1]]=='a'){
                                if((j==c[0]+1&&d1[i][1]==c[1])||(j==c[0]+2&&d1[i][1]==c[1]+1)||(j==c[0]+2&&d1[i][1]==c[1]-1)){
                                    playerhealth--;
                                    break;
                                }
                            }
                        }
                    }
                }else if(d1[i][0]<c[0]){
                    //cout<<"yes";
                    if(d1[i][1]<c[1]){
                        //cout<<"yes";
                        if((grid[d1[i][0]+3][d1[i][1]]==' ')&&(grid[d1[i][0]+3][d1[i][1]+1]==' ')&&(grid[d1[i][0]+3][d1[i][1]+2]==' ')&&(grid[d1[i][0]+2][d1[i][1]+2]==' ')&&(grid[d1[i][0]+1][d1[i][1]+2]==' ')){
                            //cout<<"yes";
                            grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                            grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                            grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                            grid[d1[i][0]+1][d1[i][1]]='b';               //grid[6][285]='b';            //   220;
                            grid[d1[i][0]+1][d1[i][1]+1]='a';               //grid[8][283]='a';             //  178;
                            grid[d1[i][0]+1][d1[i][1]+2]='b';               //grid[8][285]='a';              //178;
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';               //d1[i][0]=6;
                            grid[d1[i][0]+3][d1[i][1]]='a';               //d1[i][1]=284;
                            grid[d1[i][0]+3][d1[i][1]+2]='a';               //d1[i][2]=1;
                            d1[i][0]++;
                            d1[i][1]++;
                        }else if((grid[d1[i][0]][d1[i][1]+2]==' ')&&(grid[d1[i][0]+1][d1[i][1]+2]==' ')&&(grid[d1[i][0]+2][d1[i][1]+2]==' ')){
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                            grid[d1[i][0]][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]][d1[i][1]]='b';
                            grid[d1[i][0]][d1[i][1]+1]='a';
                            grid[d1[i][0]][d1[i][1]+2]='b';
                            grid[d1[i][0]+1][d1[i][1]]=' ';
                            grid[d1[i][0]+1][d1[i][1]+1]='a';
                            grid[d1[i][0]+2][d1[i][1]]='a';
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';
                            grid[d1[i][0]+2][d1[i][1]+2]='a';
                            d1[i][1]++;
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                        }else if(grid[d1[i][0]+3][d1[i][1]]==' '&&grid[d1[i][0]+3][d1[i][1]-1]==' '&&grid[d1[i][0]+3][d1[i][1]+1]==' '){
                            //cout<<"yes";
                            grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                            grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                            grid[d1[i][0]][d1[i][1]-1]=' ';                //grid[6][285]='b';            //   220;
                            grid[d1[i][0]+1][d1[i][1]-1]='b';               //grid[8][283]='a';             //  178;
                            grid[d1[i][0]+1][d1[i][1]+1]='b';               //grid[8][285]='a';              //178;
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]]='a';               //d1[i][0]=6;
                            grid[d1[i][0]+3][d1[i][1]-1]='a';               //d1[i][1]=284;
                            grid[d1[i][0]+3][d1[i][1]+1]='a';               //d1[i][2]=1;
                            d1[i][0]++;
                        }
                    }else if(d1[i][1]>c[1]){
                        if(grid[d1[i][0]+3][d1[i][1]]==' '&&grid[d1[i][0]+3][d1[i][1]-1]==' '&&grid[d1[i][0]+3][d1[i][1]-2]==' '&&grid[d1[i][0]+2][d1[i][1]-2]==' '&&grid[d1[i][0]+1][d1[i][1]-2]==' '){
                            grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                            grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                            grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                            grid[d1[i][0]+1][d1[i][1]]='b';               //grid[6][285]='b';            //   220;
                            grid[d1[i][0]+1][d1[i][1]-1]='a';               //grid[8][283]='a';             //  178;
                            grid[d1[i][0]+1][d1[i][1]-2]='b';               //grid[8][285]='a';              //178;
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';               //d1[i][0]=6;
                            grid[d1[i][0]+3][d1[i][1]]='a';               //d1[i][1]=284;
                            grid[d1[i][0]+3][d1[i][1]-2]='a';
                            d1[i][0]++;
                            d1[i][1]--;              //d1[i][2]=1;
                        }else if((grid[d1[i][0]][d1[i][1]-2]==' ')&&(grid[d1[i][0]+1][d1[i][1]-2]==' ')&&(grid[d1[i][0]+2][d1[i][1]-2]==' ')){
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                            grid[d1[i][0]][d1[i][1]+1]=' ';
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';
                            grid[d1[i][0]][d1[i][1]]='b';
                            grid[d1[i][0]][d1[i][1]-1]='a';
                            grid[d1[i][0]][d1[i][1]-2]='b';
                            grid[d1[i][0]+1][d1[i][1]]=' ';
                            grid[d1[i][0]+1][d1[i][1]-1]='a';
                            grid[d1[i][0]+2][d1[i][1]]='a';
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]-2]='a';
                            d1[i][1]--;
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                        }else if(grid[d1[i][0]+3][d1[i][1]]==' '&&grid[d1[i][0]+3][d1[i][1]-1]==' '&&grid[d1[i][0]+3][d1[i][1]+1]==' '){
                            //cout<<"yes";
                            grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                            grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                            grid[d1[i][0]][d1[i][1]-1]=' ';                //grid[6][285]='b';            //   220;
                            grid[d1[i][0]+1][d1[i][1]-1]='b';               //grid[8][283]='a';             //  178;
                            grid[d1[i][0]+1][d1[i][1]+1]='b';               //grid[8][285]='a';              //178;
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]]='a';               //d1[i][0]=6;
                            grid[d1[i][0]+3][d1[i][1]-1]='a';               //d1[i][1]=284;
                            grid[d1[i][0]+3][d1[i][1]+1]='a';               //d1[i][2]=1;
                            d1[i][0]++;
                        }
                    }
                }else if(d1[i][0]>c[0]){
                    if(d1[i][1]<c[1]){
                        //cout<<"yes";
                        if((grid[d1[i][0]-1][d1[i][1]]==' ')&&(grid[d1[i][0]-1][d1[i][1]+1]==' ')&&(grid[d1[i][0]-1][d1[i][1]+2]==' ')&&(grid[d1[i][0]][d1[i][1]+2]==' ')&&(grid[d1[i][0]+1][d1[i][1]+2]==' ')){
                            //cout<<"yes";
                            grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                            grid[d1[i][0]][d1[i][1]-1]=' ';
                            grid[d1[i][0]][d1[i][1]+1]='a';
                            grid[d1[i][0]-1][d1[i][1]+1]='a';               //grid[6][283]='b';               // 220;
                            grid[d1[i][0]+1][d1[i][1]]='a';                //grid[8][283]='a';             //  178;
                            grid[d1[i][0]+1][d1[i][1]+2]='a';               //grid[8][285]='a';              //178;
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';               //d1[i][0]=6;
                            grid[d1[i][0]-1][d1[i][1]]='b';               //d1[i][1]=284;
                            grid[d1[i][0]-1][d1[i][1]+2]='b';               //d1[i][2]=1;
                            d1[i][0]--;
                            d1[i][1]++;
                        }else if((grid[d1[i][0]][d1[i][1]+2]==' ')&&(grid[d1[i][0]+1][d1[i][1]+2]==' ')&&(grid[d1[i][0]+2][d1[i][1]+2]==' ')){
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                            grid[d1[i][0]][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]][d1[i][1]]='b';
                            grid[d1[i][0]][d1[i][1]+1]='a';
                            grid[d1[i][0]][d1[i][1]+2]='b';
                            grid[d1[i][0]+1][d1[i][1]]=' ';
                            grid[d1[i][0]+1][d1[i][1]+1]='a';
                            grid[d1[i][0]+2][d1[i][1]]='a';
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';
                            grid[d1[i][0]+2][d1[i][1]+2]='a';
                            d1[i][1]++;
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                        }else if(grid[d1[i][0]-1][d1[i][1]]==' '&&grid[d1[i][0]-1][d1[i][1]-1]==' '&&grid[d1[i][0]-1][d1[i][1]+1]==' '){
                            //cout<<"yes";
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';               //grid[6][284]='a';                //  178;
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                            grid[d1[i][0]+1][d1[i][1]-1]='a';                //grid[6][285]='b';            //   220;
                            grid[d1[i][0]+1][d1[i][1]]=' ';               //grid[8][283]='a';             //  178;
                            grid[d1[i][0]+1][d1[i][1]+1]='a';               //grid[8][285]='a';              //178;
                            grid[d1[i][0]][d1[i][1]+1]=' ';
                            grid[d1[i][0]][d1[i][1]-1]=' ';
                            grid[d1[i][0]-1][d1[i][1]]='a';               //d1[i][0]=6;
                            grid[d1[i][0]-1][d1[i][1]-1]='b';               //d1[i][1]=284;
                            grid[d1[i][0]-1][d1[i][1]+1]='b';               //d1[i][2]=1;
                            d1[i][0]--;
                        }
                    }else if(d1[i][1]>c[1]){
                        if(grid[d1[i][0]-1][d1[i][1]]==' '&&grid[d1[i][0]-1][d1[i][1]-1]==' '&&grid[d1[i][0]-1][d1[i][1]-2]==' '&&grid[d1[i][0]][d1[i][1]-2]==' '&&grid[d1[i][0]+1][d1[i][1]-2]==' '){
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';               //grid[6][284]='a';                //  178;
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                            grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][283]='b';               // 220;
                            grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[6][285]='b';            //   220;
                            grid[d1[i][0]][d1[i][1]-1]='a';               //grid[8][283]='a';             //  178;
                            grid[d1[i][0]+1][d1[i][1]-2]='a';               //grid[8][285]='a';              //178;
                            grid[d1[i][0]-1][d1[i][1]-1]='a';               //d1[i][0]=6;
                            grid[d1[i][0]-1][d1[i][1]]='b';               //d1[i][1]=284;
                            grid[d1[i][0]-1][d1[i][1]-2]='b';
                            d1[i][0]--;
                            d1[i][1]--;               //d1[i][2]=1;
                        }else if((grid[d1[i][0]][d1[i][1]-2]==' ')&&(grid[d1[i][0]+1][d1[i][1]-2]==' ')&&(grid[d1[i][0]+2][d1[i][1]-2]==' ')){
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                            grid[d1[i][0]][d1[i][1]+1]=' ';
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';
                            grid[d1[i][0]][d1[i][1]]='b';
                            grid[d1[i][0]][d1[i][1]-1]='a';
                            grid[d1[i][0]][d1[i][1]-2]='b';
                            grid[d1[i][0]+1][d1[i][1]]=' ';
                            grid[d1[i][0]+1][d1[i][1]-1]='a';
                            grid[d1[i][0]+2][d1[i][1]]='a';
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';
                            grid[d1[i][0]+2][d1[i][1]-2]='a';
                            d1[i][1]--;
                            //cout<<"yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1x : "<<d1[i][0]<<" d1y : "<<d1[i][1]<<" cx : "<<c[0]<<" cy : "<<c[1];
                        }else if(grid[d1[i][0]-1][d1[i][1]]==' '&&grid[d1[i][0]-1][d1[i][1]-1]==' '&&grid[d1[i][0]-1][d1[i][1]+1]==' '){
                            //cout<<"yes";
                            grid[d1[i][0]+2][d1[i][1]-1]=' ';               //grid[6][284]='a';                //  178;
                            grid[d1[i][0]+2][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                            grid[d1[i][0]+1][d1[i][1]]=' ';                //grid[6][285]='b';            //   220;
                            grid[d1[i][0]+1][d1[i][1]-1]='a';               //grid[8][283]='a';             //  178;
                            grid[d1[i][0]+1][d1[i][1]+1]='a';               //grid[8][285]='a';              //178;
                            grid[d1[i][0]][d1[i][1]+1]=' ';
                            grid[d1[i][0]][d1[i][1]-1]=' ';
                            grid[d1[i][0]-1][d1[i][1]]='a';               //d1[i][0]=6;
                            grid[d1[i][0]-1][d1[i][1]-1]='b';               //d1[i][1]=284;
                            grid[d1[i][0]-1][d1[i][1]+1]='b';               //d1[i][2]=1;
                            d1[i][0]--;
                        }
                    }
                }
                border();
                if(playerpoint<10)
                    Sleep(200);
                if(playerpoint>9&&playerhealth<30)
                    Sleep(100);
                if(playerpoint>29)
                    Sleep(50);
            }
        }
    }
}
void gun(){
    while(1){
        Sleep(5000);
        if(emptyspace(11)){

        }
    }
}
void setup(){
    for(int i=0;i<5;i++)
        d1[i][2]=0;
}
void display(){
    int x=0;
    char b=219;
    while(x!='1'){
        //start
        cout<<"\n\t\t\t "<<"       "<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b;  //1
        cout<<"\n\t\t\t "<<b<<b<<"     "<<b<<"                            "<<b;//2
        cout<<"\n\t\t\t"<<b<<" "<<b<<"     "<<b<<" "<<b<<b<<b<<b<<" "<<b<<b<<b<<b<<b<<" "<<b<<b<<b<<b<<" "<<b<<b<<b<<b<<" "<<b<<b<<b<<b<<b<<" "<<b;       //3
        cout<<"\n\t\t\t  "<<b<<"     "<<b<<" "<<b<<"      "<<b<<"   "<<b<<"  "<<b<<" "<<b<<"  "<<b<<"   "<<b<<"   "<<b;                           //4
        cout<<"\n\t\t\t  "<<b<<"     "<<b<<" "<<b<<b<<b<<b<<"   "<<b<<"   "<<b<<b<<b<<b<<" "<<b<<b<<b<<"    "<<b<<"   "<<b;                     //5
        cout<<"\n\t\t\t  "<<b<<"     "<<b<<"    "<<b<<"   "<<b<<"   "<<b<<"  "<<b<<" "<<b<<"  "<<b<<"   "<<b<<"   "<<b;                           //6
        cout<<"\n\t\t\t  "<<b<<"     "<<b<<" "<<b<<b<<b<<b<<"   "<<b<<"   "<<b<<"  "<<b<<" "<<b<<"  "<<b<<"   "<<b<<"   "<<b;                     //7
        cout<<"\n\t\t\t"<<b<<b<<b<<b<<b<<"   "<<b<<"                            "<<b;//8
        cout<<"\n\t\t\t        "<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b;//9

        cout<<"\n\t\t\t "<<"       "<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b;//1
        cout<<"\n\t\t\t"<<b<<b<<b<<"     "<<b;//2
        cout<<"\n\t\t\t  "<<b<<"     "<<b;//3
        cout<<"\n\t\t\t"<<b<<b<<b<<"     "<<b;//4
        cout<<"\n\t\t\t"<<b<<"       "<<b;//5
        cout<<"\n\t\t\t"<<b<<b<<b<<"     "<<b;//6
        cout<<"\n\t\t\t        "<<b;//7
        cout<<"\n\t\t\t        "<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b<<b;//8
        //help


        if(x=='2'){
            system("CLS");
            cout<<"\n\n\n\n\t\t\tGame In Progress";
        }
        if(x=='3'){
            system("CLS");
            cout<<"\n\n\n\n\n\t\t\tCreated By Abhishek Kumar(Abs)";
        }
        x=getch();
        system("CLS");
    }
}
void displayend(){
    system("CLS");
    cout<<" YOUR SCORE : "<<playerpoint;
    cout<<"\n For Restart Press 1\n";
    cout<<"\n For Exit Press 2\n";
}
void playerhealthup(){
    while(playerhealth>=0){
        Sleep(2000);
        if(playerhealth>=0&&playerhealth<3)
            playerhealth++;
    }
}
int main(){
    Start :
    char son=0;
    playerhealth=3;
    playerpoint=0;
    thread th3s(setup);
    display();
	char n,out='y';
	gunpoint='l';
	int check;
	system("CLS");
	if(out=='y'){
		grid[6][34]='a';                //  17+8;
		grid[7][34]='a';                // 178;
		grid[6][33]='b';               // 220;
		grid[6][35]='b';            //   220;
		grid[8][33]='a';             //  178;
		grid[8][35]='a';              //178;
		c[0]=6;
		c[1]=34;
		out='n';
	}
	border();
	thread th1s(gravity,2);
	thread thhealth(playerhealthup);
	thread th1(ai,1);
	thread th2(ai,2);
	thread th3(ai,3);
	thread th4(ai,4);
	thread th5(ai,5);
	while(playerhealth>=0){
		if(out=='y'){
			grid[6][34]='a';
			grid[7][34]='a';
			grid[6][33]='b';
			grid[6][35]='b';
			grid[8][33]='a';
			grid[8][35]='a';
			c[0]=6;
			c[1]=34;
			out='n';
		}
		if(kbhit()){
            RESCAN :
            killpoint=100;
			n=getch();
			//right key
			if(n=='d'||n=='D'){
				check=1;
				for(int i=0;i<1;i++){
					if(grid[c[0]][c[1]+2]!=' '||grid[c[0]+1][c[1]+2]!=' '||grid[c[0]+2][c[1]+2]!=' '){
						check=0;
					}
				}
				if(check==1){
					//line 1 add
					grid[c[0]][c[1]+2]='b';
					grid[c[0]][c[1]+1]='a';
					grid[c[0]][c[1]]='b';
					//line 1 remove
					grid[c[0]][c[1]-1]=' ';
					//line 2
					grid[c[0]+1][c[1]+1]='a';
					//remove
					grid[c[0]+1][c[1]]=' ';
					//line 3
					grid[c[0]+2][c[1]]='a';
					grid[c[0]+2][c[1]+2]='a';
					//remove
					grid[c[0]+2][c[1]+1]=' ';
					grid[c[0]+2][c[1]-1]=' ';
					c[1]++;
				}
			}
			//left key
			else if(n=='a'||n=='A'){
				check=1;
				for(int i=0;i<1;i++){
					if(grid[c[0]][c[1]-2]!=' '||grid[c[0]+1][c[1]-2]!=' '||grid[c[0]+2][c[1]-2]!=' '){
						check=0;
					}
				}
				if(check==1){
					//line 1 add
					grid[c[0]][c[1]-2]='b';
					grid[c[0]][c[1]-1]='a';
					grid[c[0]][c[1]]='b';
					//line 1 remove
					grid[c[0]][c[1]+1]=' ';
					//line 2
					grid[c[0]+1][c[1]-1]='a';
					//remove
					grid[c[0]+1][c[1]]=' ';
					//line 3
					grid[c[0]+2][c[1]]='a';
					grid[c[0]+2][c[1]-2]='a';
					//remove
					grid[c[0]+2][c[1]-1]=' ';
					grid[c[0]+2][c[1]+1]=' ';
                    c[1]--;
				}
			}
			//up key
			else if(n=='w'||n=='W'){
				check=1;
				for(int i=0;i<1;i++){
					if( grid[c[0]-1][c[1]]!=' '||grid[c[0]-1][c[1]-1]!=' '||grid[c[0]-1][c[1]+1]!=' '){
						check=0;
					}
				}
				if(check==1){
					//line 1 add
					grid[c[0]-1][c[1]-1]='b';
					grid[c[0]+1][c[1]-1]='a';
					//line 1 remove
					grid[c[0]][c[1]-1]=' ';
					grid[c[0]+2][c[1]-1]=' ';
					//line 2
					grid[c[0]-1][c[1]]='a';
					//remove
					grid[c[0]+1][c[1]]=' ';
					//line 3
					grid[c[0]-1][c[1]+1]='b';
					grid[c[0]+1][c[1]+1]='a';
					//remove
					grid[c[0]][c[1]+1]=' ';
					grid[c[0]+2][c[1]+1]=' ';
					c[0]--;
				}
			}
			//down key
			else if(n=='s'||n=='S'){
				check=1;
				for(int i=0;i<1;i++){
					if(grid[c[0]+3][c[1]]!=' '||grid[c[0]+3][c[1]-1]!=' '||grid[c[0]+3][c[1]+1]!=' '){
						check=0;
					}
				}
				if(check==1){
					//line 1 add
					grid[c[0]+1][c[1]-1]='b';
					grid[c[0]+3][c[1]-1]='a';
					//line 1 remove
					grid[c[0]][c[1]-1]=' ';
					grid[c[0]+2][c[1]-1]=' ';
					//line 2
					grid[c[0]+2][c[1]]='a';
					//remove
					grid[c[0]][c[1]]=' ';
					//line 3
					grid[c[0]+1][c[1]+1]='b';
					grid[c[0]+3][c[1]+1]='a';
					//remove
					grid[c[0]][c[1]+1]=' ';
					grid[c[0]+2][c[1]+1]=' ';
					c[0]++;
				}
			}
			else if(n=='l'||n=='L'){
                gunpoint='l';
			}
			else if(n=='j'||n=='J'){
                gunpoint='j';
			}
			else if(n=='i'||n=='I'){
                gunpoint='i';
			}else if(n=='k'||n=='K'){
                gunpoint='k';
			}else if(n==' '){
			    Beep(1000,100);
                if(gunpoint=='l'){
                    for(int j=c[1];j<351;j++){
                        if(grid[c[0]][j]==' '){
                            continue;
                        }else if(grid[c[0]][j]=='X'){
                            break;
                        }else if(grid[c[0]][j]=='a'){
                            for(int i=0;i<5;i++){
                                if((d1[i][0]==c[0]-1 && d1[i][1]==j)||(d1[i][0]==c[0]-2 && d1[i][1]==j+1)){
                                    grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                                    grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                                    grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                                    grid[d1[i][0]+1][d1[i][1]]=' ';             //grid[8][285]='a';              //178;
                                    grid[d1[i][0]+2][d1[i][1]-1]=' ';               //d1[i][1]=284;
                                    grid[d1[i][0]+2][d1[i][1]+1]=' ';
                                    killpoint=i;
                                    border();
                                    d1[i][2]=0;
                                    playerpoint++;
                                    goto RESCAN;
                                }
                            }
                        }else if(grid[c[0]][j]=='b'){
                            for(int i=0;i<5;i++){
                                if(d1[i][0]==c[0] && d1[i][1]==j+1){
                                    grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                                    grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                                    grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                                    grid[d1[i][0]+1][d1[i][1]]=' ';             //grid[8][285]='a';              //178;
                                    grid[d1[i][0]+2][d1[i][1]-1]=' ';               //d1[i][1]=284;
                                    grid[d1[i][0]+2][d1[i][1]+1]=' ';
                                    killpoint=i;
                                    border();
                                    d1[i][2]=0;
                                    playerpoint++;
                                    goto RESCAN;
                                }
                            }
                        }
                    }
                }else if(gunpoint=='j'){
                    for(int j=c[1];j>0;j--){
                        if(grid[c[0]][j]==' '){
                            continue;
                        }else if(grid[c[0]][j]=='X'){
                            break;
                        }else if(grid[c[0]][j]=='a'){
                            for(int i=0;i<5;i++){
                                if((d1[i][0]==c[0]-1 && d1[i][1]==j)||(d1[i][0]==c[0]-2 && d1[i][1]==j-1)){
                                    grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                                    grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                                    grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                                    grid[d1[i][0]+1][d1[i][1]]=' ';             //grid[8][285]='a';              //178;
                                    grid[d1[i][0]+2][d1[i][1]-1]=' ';               //d1[i][1]=284;
                                    grid[d1[i][0]+2][d1[i][1]+1]=' ';
                                    killpoint=i;
                                    border();
                                    d1[i][2]=0;
                                    playerpoint++;
                                    goto RESCAN;
                                }
                            }
                        }else if(grid[c[0]][j]=='b'){
                            for(int i=0;i<5;i++){
                                if(d1[i][0]==c[0] && d1[i][1]==j-1){
                                    grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                                    grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                                    grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                                    grid[d1[i][0]+1][d1[i][1]]=' ';             //grid[8][285]='a';              //178;
                                    grid[d1[i][0]+2][d1[i][1]-1]=' ';               //d1[i][1]=284;
                                    grid[d1[i][0]+2][d1[i][1]+1]=' ';
                                    killpoint=i;
                                    border();
                                    d1[i][2]=0;
                                    playerpoint++;
                                    goto RESCAN;
                                }
                            }
                        }
                    }
                }else if(gunpoint=='i'){
                    for(int j=c[0];j>0;j--){
                        if(grid[j][c[1]]==' '){
                            continue;
                        }else if(grid[j][c[1]]=='X'){
                            break;
                        }else if(grid[j][c[1]]=='a'){
                            for(int i=0;i<5;i++){
                                if((d1[i][0]==j-1 && d1[i][1]==c[1])||(d1[i][0]==j-2 && (d1[i][1]==c[1]-1||d1[i][1]==c[1]+1))){
                                    grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                                    grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                                    grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                                    grid[d1[i][0]+1][d1[i][1]]=' ';             //grid[8][285]='a';              //178;
                                    grid[d1[i][0]+2][d1[i][1]-1]=' ';               //d1[i][1]=284;
                                    grid[d1[i][0]+2][d1[i][1]+1]=' ';
                                    killpoint=i;
                                    border();
                                    d1[i][2]=0;
                                    playerpoint++;
                                    goto RESCAN;
                                }
                            }
                        }
                    }
                }else if(gunpoint=='k'){
                    for(int j=c[0]+2;j<35;j++){
                        if(grid[j][c[1]]==' '){
                            continue;
                        }else if(grid[j][c[1]]=='X'){
                            break;
                        }else if(grid[j][c[1]]=='a'){
                            for(int i=0;i<5;i++){
                                if(d1[i][0]==j && d1[i][1]==c[1]){
                                    grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                                    grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                                    grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                                    grid[d1[i][0]+1][d1[i][1]]=' ';             //grid[8][285]='a';              //178;
                                    grid[d1[i][0]+2][d1[i][1]-1]=' ';               //d1[i][1]=284;
                                    grid[d1[i][0]+2][d1[i][1]+1]=' ';
                                    killpoint=i;
                                    border();
                                    d1[i][2]=0;
                                    playerpoint++;
                                    goto RESCAN;
                                }
                            }
                        }else if(grid[j][c[1]]=='b'){
                            for(int i=0;i<5;i++){
                                if(d1[i][0]==j && (d1[i][1]==c[1]-1 || d1[i][1]==c[1]+1)){
                                    grid[d1[i][0]][d1[i][1]]=' ';               //grid[6][284]='a';                //  178;
                                    grid[d1[i][0]][d1[i][1]+1]=' ';               //grid[7][284]='a';                // 178;
                                    grid[d1[i][0]][d1[i][1]-1]=' ';               //grid[6][283]='b';               // 220;
                                    grid[d1[i][0]+1][d1[i][1]]=' ';             //grid[8][285]='a';              //178;
                                    grid[d1[i][0]+2][d1[i][1]-1]=' ';               //d1[i][1]=284;
                                    grid[d1[i][0]+2][d1[i][1]+1]=' ';
                                    killpoint=i;
                                    border();
                                    d1[i][2]=0;
                                    playerpoint++;
                                    goto RESCAN;
                                }
                            }
                        }
                    }
                }

			}
			border();
		}
	}
    Sleep(1000);
    displayend();
    while(son!='1'&&son!='2'){
        son=getch();
        if(son=='1'){
            goto Start;
        }
        if(son=='2'){
            break;
        }
    }
}
void border(){
    int start=0;
    if(gunpoint=='l'||gunpoint=='L'){
        if(c[1]>40)
            start=c[1]-40;
        if(c[1]>169)
            start=170-40;
    }
    else if(gunpoint=='j'||gunpoint=='J'){
        if(c[1]>130)
            start=c[1]-130;
        if(c[1]<130)
            start=0;
        if(c[1]>260)
            start=130;
    }
    else{
        if(c[1]>80)
            start=c[1]-80;
        if(c[1]>210)
           start= 130;
        if(c[1]<=80)
            start=0;
    }
    int i,j,ucol=10,ccol=12,color=15;
    CHAR_INFO gridbuffer[14000];
    COORD zerozero={start,0},gridsz={350,35};
    SMALL_RECT gridrect={0,0,350,350};
    HANDLE out;
    out=GetStdHandle(STD_OUTPUT_HANDLE);
    for(i=0;i<35;i++)
    {
        for(j=0;j<350;j++)
        {
            gridbuffer[j+350*i].Attributes=color;
            if(grid[i][j]=='X'){
                gridbuffer[j+350*i].Char.AsciiChar=219;
                //gridbuffer[j+350*i].Attributes=ccol;
            }
            else if(grid[i][j]=='a')
            {
                gridbuffer[j+350*i].Char.AsciiChar=178;
                gridbuffer[j+350*i].Attributes=1;
            }
            else if(grid[i][j]==' '){
                gridbuffer[j+350*i].Char.AsciiChar=' ';
                //gridbuffer[j+350*i].Attributes=ccol;
            }
            else if(grid[i][j]=='b'){
                gridbuffer[j+350*i].Char.AsciiChar=220;
                gridbuffer[j+350*i].Attributes=1;
            }
            else
            {
                gridbuffer[j+350*i].Char.AsciiChar=grid[i][j];
            }
        }
    }
    if(gunp==1){
        if(gunpoint=='l'||gunpoint=='L'){
            gridbuffer[c[1]+350*c[0]+2].Char.AsciiChar='=';
            gridbuffer[c[1]+350*c[0]+3].Char.AsciiChar=175;
        }else if(gunpoint=='j'||gunpoint=='J'){
            gridbuffer[c[1]+350*c[0]-2].Char.AsciiChar='=';
            gridbuffer[c[1]+350*c[0]-3].Char.AsciiChar=174;
        }else if(gunpoint=='k'||gunpoint=='K'){
            gridbuffer[c[1]+350*c[0]+1050].Char.AsciiChar=187;
        }else if(gunpoint=='i'||gunpoint=='I'){
            gridbuffer[c[1]+350*c[0]-350].Char.AsciiChar=188;
        }
    }
    if(killpoint!=100){
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]].Char.AsciiChar=178;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]-1].Char.AsciiChar=220;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]+1].Char.AsciiChar=220;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]+350].Char.AsciiChar=178;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]+699].Char.AsciiChar=178;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]+701].Char.AsciiChar=178;

        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]].Attributes=12;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]-1].Attributes=12;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]+1].Attributes=12;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]+350].Attributes=12;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]+699].Attributes=12;
        gridbuffer[d1[killpoint][0]*350+d1[killpoint][1]+701].Attributes=12;

    }
    if(playerhealth==3)
        gridbuffer[350*c[0]+c[1]].Attributes=12;
    if(playerhealth==2)
        gridbuffer[350*c[0]+c[1]].Attributes=10;
    if(playerhealth==1)
        gridbuffer[350*c[0]+c[1]].Attributes=11;
    /*if(playerhealth==2)
        gridbuffer[350*c[0]+c[1]].Attributes=9;
    if(playerhealth==1)
        gridbuffer[350*c[0]+c[1]].Attributes=8;
*/
    WriteConsoleOutput(out,gridbuffer,gridsz,zerozero,&gridrect);
}
